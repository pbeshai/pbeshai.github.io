{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/core.js","webpack:///./src/components/Nav.js","webpack:///./src/utils/style.js","webpack:///./src/utils/GlobalStyle.js","webpack:///./src/components/Footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_core__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","px","py","mx","maxWidth","textAlign","my","to","themed","key","props","theme","Box","styled","space","display","width","fontSize","fontFamily","color","flex","order","alignSelf","justifySelf","minHeight","gridColumn","gridRow","gridArea","propTypes","Object","assign","Flex","flexWrap","flexDirection","alignItems","justifyContent","Text","fontWeight","lineHeight","letterSpacing","textStyle","Header","defaultProps","as","m","StyledLink","css","colors","gray","cyan","Link","_ref","children","activeClassName","other","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","test","react__WEBPACK_IMPORTED_MODULE_4___default","GatsbyLink","href","Button","appearance","textDecoration","borders","borderColor","borderRadius","buttonStyle","bg","border","Image","height","Img","cards","variant","boxShadow","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","opacity","gridTemplateColumnsFill","style","prop","cssProperty","transformValue","Number","isNaN","scale","Grid","gridGap","gridColumnGap","gridRowGap","gridAutoFlow","gridAutoColumns","gridAutoRows","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","List","withConfig","displayName","componentId","listStyleType","ListItem","InlineList","InlineListItem","mr","Nav","showTitle","hideHome","p","textStyles","caps","textTransform","contentHeader","fontSizes","darken","lighten","darken1","darken2","darken3","white","black","red","pink","grape","violet","indigo","blue","teal","green","lime","yellow","orange","fonts","body","header","code","GlobalStyle","createGlobalStyle","_templateObject","Footer","react_default","core","baseUrl","Layout","hideNavTitle","hideNav","pageTitle","_ref$description","description","metaImage","_ref$slug","slug","Fragment","utils_GlobalStyle","gatsby_browser_entry","query","render","data","baseTitle","site","siteMetadata","title","fullTitle","Helmet_default","rel","lang","name","content","property","styled_components_browser_esm","components_Footer","_2994927498","PropTypes","node","isRequired"],"mappings":"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","file":"component---src-pages-404-js-4629270aec7a179b63b9.js","sourcesContent":["import React from 'react';\nimport Layout from '../components/layout';\nimport { Box, Text, Header, Link } from '../components/core';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <Box px={3} py={5} mx=\"auto\" maxWidth={800}>\n      <Header textAlign=\"center\" my={3}>\n        Sorry!\n      </Header>\n      <Text textAlign=\"center\">\n        <p>The page you are looking for doesn't seem exist.</p>\n        <Link to=\"/\">Go to Home</Link>\n      </Text>\n    </Box>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","/**\n * Initially from rebass\n * https://github.com/rebassjs/rebass/blob/master/src/index.js\n */\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Img from 'gatsby-image';\nimport { Link as GatsbyLink } from 'gatsby';\n\nimport {\n  space,\n  display,\n  color,\n  width,\n  height,\n  flex,\n  order,\n  alignSelf,\n  justifySelf,\n  flexWrap,\n  flexDirection,\n  alignItems,\n  justifyContent,\n  fontSize,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  textStyle,\n  lineHeight,\n  letterSpacing,\n  borders,\n  borderColor,\n  borderRadius,\n  buttonStyle,\n  boxShadow,\n  backgroundImage,\n  backgroundSize,\n  backgroundPosition,\n  backgroundRepeat,\n  opacity,\n  variant,\n  minHeight,\n  maxWidth,\n  gridGap,\n  gridColumnGap,\n  gridRowGap,\n  gridColumn,\n  gridRow,\n  gridAutoFlow,\n  gridAutoColumns,\n  gridAutoRows,\n  gridTemplateColumns,\n  gridTemplateRows,\n  gridTemplateAreas,\n  gridArea,\n  style,\n} from 'styled-system';\n\nconst themed = key => props => props.theme[key];\n\nexport const Box = styled('div')(\n  space,\n  display,\n  width,\n  fontSize,\n  fontFamily,\n  color,\n  flex,\n  order,\n  alignSelf,\n  justifySelf,\n  minHeight,\n  maxWidth,\n  gridColumn,\n  gridRow,\n  gridArea,\n  themed('Box')\n);\n\nBox.propTypes = {\n  ...space.propTypes,\n  ...width.propTypes,\n  ...fontSize.propTypes,\n  ...color.propTypes,\n  ...flex.propTypes,\n  ...order.propTypes,\n  ...alignSelf.propTypes,\n  ...gridColumn.propTypes,\n  ...gridRow.propTypes,\n  ...gridArea.propTypes,\n};\n\nexport const Flex = styled(Box)(\n  {\n    display: 'flex',\n  },\n  flexWrap,\n  flexDirection,\n  alignItems,\n  justifyContent,\n  themed('Flex')\n);\n\nFlex.propTypes = {\n  ...flexWrap.propTypes,\n  ...flexDirection.propTypes,\n  ...alignItems.propTypes,\n  ...justifyContent.propTypes,\n};\n\nexport const Text = styled(Box)(\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  textStyle,\n  themed('Text')\n);\n\nText.propTypes = {\n  ...fontFamily.propTypes,\n  ...fontWeight.propTypes,\n  ...textAlign.propTypes,\n  ...lineHeight.propTypes,\n  ...letterSpacing.propTypes,\n  ...textStyle.propTypes,\n};\n\nexport const Header = styled(Text)(themed('Header'));\n\nHeader.defaultProps = {\n  as: 'h2',\n  m: 0,\n  fontSize: 3,\n  fontWeight: 'bold',\n  fontFamily: 'header',\n  textStyle: 'caps',\n};\n\nexport const StyledLink = styled(Text)(\n  themed('Link'),\n  css`\n    color: ${props => props.theme.colors.gray[7]};\n    border-bottom: 2px solid ${props => props.theme.colors.gray[2]};\n    text-decoration: none;\n    background: transparent;\n    transition: 0.2s background linear, 0.2s border-color linear;\n\n    &:hover {\n      color: ${props => props.theme.colors.gray[8]};\n      background: ${props => props.theme.colors.cyan[0]};\n      border-color: ${props => props.theme.colors.cyan[2]};\n    }\n  `\n);\n\nStyledLink.defaultProps = {\n  as: 'a',\n};\n\n// Since DOM elements <a> cannot receive activeClassName,\n// destructure the prop here and pass it only to GatsbyLink\nexport const Link = ({ children, to, activeClassName, ...other }) => {\n  // Tailor the following test to your environment.\n  // This example assumes that any internal link (intended for Gatsby)\n  // will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(to);\n\n  // TODO: VERIFY WHY THIS IS USING A GATSBY LINK FOR DEMO!!!!\n\n  // Use Gatsby Link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <StyledLink\n        as={GatsbyLink}\n        to={to}\n        activeClassName={activeClassName}\n        {...other}\n      >\n        INT{children}\n      </StyledLink>\n    );\n  }\n  return (\n    <StyledLink href={to} {...other}>\n      EXT{children}\n    </StyledLink>\n  );\n};\n\nexport const Button = styled(Box)(\n  {\n    appearance: 'none',\n    display: 'inline-block',\n    textAlign: 'center',\n    lineHeight: 'inherit',\n    textDecoration: 'none',\n  },\n  fontWeight,\n  borders,\n  borderColor,\n  borderRadius,\n  buttonStyle,\n  themed('Button')\n);\n\nButton.propTypes = {\n  ...fontWeight.propTypes,\n  ...borders.propTypes,\n  ...borderColor.propTypes,\n  ...borderRadius.propTypes,\n  ...buttonStyle.propTypes,\n};\n\nButton.defaultProps = {\n  as: 'button',\n  fontSize: 'inherit',\n  fontWeight: 'bold',\n  m: 0,\n  px: 3,\n  py: 2,\n  color: 'white',\n  bg: 'blue',\n  border: 0,\n  borderRadius: 4,\n};\n\nexport const Image = styled(Box)(\n  {\n    maxWidth: '100%',\n    height: 'auto',\n  },\n  height,\n  borderRadius,\n  themed('Image')\n);\n\nImage.propTypes = {\n  ...height.propTypes,\n  ...borderRadius.propTypes,\n};\n\nImage.defaultProps = {\n  as: Img,\n  m: 0,\n};\n\nconst cards = variant({ key: 'cards' });\n\nexport const Card = styled(Box)(\n  borders,\n  borderColor,\n  borderRadius,\n  boxShadow,\n  backgroundImage,\n  backgroundSize,\n  backgroundPosition,\n  backgroundRepeat,\n  opacity,\n  cards,\n  themed('Card')\n);\n\nCard.propTypes = {\n  ...borders.propTypes,\n  ...borderColor.propTypes,\n  ...borderRadius.propTypes,\n  ...boxShadow.propTypes,\n  ...backgroundImage.propTypes,\n  ...backgroundSize.propTypes,\n  ...backgroundPosition.propTypes,\n  ...backgroundRepeat.propTypes,\n  ...opacity.propTypes,\n  ...cards.propTypes,\n};\n\nconst gridTemplateColumnsFill = style({\n  // React prop name\n  prop: 'gridTemplateColumnsFill',\n  // The corresponding CSS property (defaults to prop argument)\n  cssProperty: 'gridTemplateColumns',\n  // key for theme values\n  key: 'gridColumnSizes',\n  // accessor function for transforming the value\n  transformValue: n =>\n    `repeat(auto-fill, minmax(${Number.isNaN(n) ? n : `${n}px`}, 1fr))`,\n  // add a fallback scale object or array, if theme is not present\n  scale: [0, 120, 180, 240, 300, 360, 420, 480, 540, 600],\n});\n\nexport const Grid = styled(Box)(\n  {\n    display: 'grid',\n  },\n  gridGap,\n  gridColumnGap,\n  gridRowGap,\n  gridAutoFlow,\n  gridAutoColumns,\n  gridAutoRows,\n  gridTemplateColumns,\n  gridTemplateRows,\n  gridTemplateAreas,\n  gridTemplateColumnsFill,\n  themed('Grid')\n);\n\nGrid.defaultProps = {\n  gridGap: 3,\n};\n\nGrid.propTypes = {\n  ...gridGap.propTypes,\n  ...gridColumnGap.propTypes,\n  ...gridRowGap.propTypes,\n  ...gridAutoFlow.propTypes,\n  ...gridAutoColumns.propTypes,\n  ...gridAutoRows.propTypes,\n  ...gridTemplateColumns.propTypes,\n  ...gridTemplateRows.propTypes,\n  ...gridTemplateAreas.propTypes,\n};\n\nexport const List = styled(Box)`\n  list-style-type: ${props => props.listStyleType};\n`;\nList.defaultProps = {\n  as: 'ul',\n};\n\nexport const ListItem = props => <Box as=\"li\" {...props} />;\n\nexport const InlineList = styled(List)`\n  list-style-type: none;\n  padding-left: 0;\n`;\n\nexport const InlineListItem = styled(Text)`\n  display: inline-block;\n  &:last-child {\n    margin-right: 0;\n  }\n  &::before {\n    content: '•';\n    color: ${props => props.theme.colors.gray[3]};\n    margin-right: ${props => props.theme.space[props.mr]}px;\n  }\n  &:first-child::before {\n    content: '';\n    margin-right: 0;\n  }\n`;\n\nInlineListItem.defaultProps = {\n  as: 'li',\n  mr: 3,\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport {\n  Box,\n  Text,\n  Link,\n  Header,\n  InlineList,\n  InlineListItem,\n} from '../components/core';\n\nconst Nav = ({ showTitle, hideHome }) => {\n  return (\n    <Box p={3} mx=\"auto\" maxWidth={800}>\n      <Text textAlign={'center'}>\n        {showTitle && <Header>Peter Beshai</Header>}\n        <InlineList>\n          {!hideHome && (\n            <InlineListItem>\n              <Link to=\"/\" activeClassName=\"active\">\n                Home\n              </Link>\n            </InlineListItem>\n          )}\n          <InlineListItem>\n            <Link to=\"/#writing\" activeClassName=\"active\">\n              Writing\n            </Link>\n          </InlineListItem>\n          <InlineListItem>\n            <Link to=\"/#projects\" activeClassName=\"active\">\n              Projects\n            </Link>\n          </InlineListItem>\n          <InlineListItem>\n            <Link to=\"/#experiments\" activeClassName=\"active\">\n              Experiments\n            </Link>\n          </InlineListItem>\n          <InlineListItem>\n            <Link to=\"/#open-source\" activeClassName=\"active\">\n              Open Source\n            </Link>\n          </InlineListItem>\n        </InlineList>\n      </Text>\n    </Box>\n  );\n};\n\nexport default Nav;\n","import { util, constants } from 'styled-system';\nimport darken from 'polished/lib/color/darken';\nimport lighten from 'polished/lib/color/lighten';\n\n//export { default as openColors } from 'open-color';\n\nconst openColors = {\n  white: '#ffffff',\n  black: '#000000',\n  gray: ['#f8f9fa', '#f1f3f5', '#e9ecef', '#dee2e6', '#ced4da', '#adb5bd', '#868e96', '#495057', '#343a40', '#212529'],\n  red: ['#fff5f5', '#ffe3e3', '#ffc9c9', '#ffa8a8', '#ff8787', '#ff6b6b', '#fa5252', '#f03e3e', '#e03131', '#c92a2a'],\n  pink: ['#fff0f6', '#ffdeeb', '#fcc2d7', '#faa2c1', '#f783ac', '#f06595', '#e64980', '#d6336c', '#c2255c', '#a61e4d'],\n  grape: ['#f8f0fc', '#f3d9fa', '#eebefa', '#e599f7', '#da77f2', '#cc5de8', '#be4bdb', '#ae3ec9', '#9c36b5', '#862e9c'],\n  violet: ['#f3f0ff', '#e5dbff', '#d0bfff', '#b197fc', '#9775fa', '#845ef7', '#7950f2', '#7048e8', '#6741d9', '#5f3dc4'],\n  indigo: ['#edf2ff', '#dbe4ff', '#bac8ff', '#91a7ff', '#748ffc', '#5c7cfa', '#4c6ef5', '#4263eb', '#3b5bdb', '#364fc7'],\n  blue: ['#e7f5ff', '#d0ebff', '#a5d8ff', '#74c0fc', '#4dabf7', '#339af0', '#228be6', '#1c7ed6', '#1971c2', '#1864ab'],\n  cyan: ['#e3fafc', '#c5f6fa', '#99e9f2', '#66d9e8', '#3bc9db', '#22b8cf', '#15aabf', '#1098ad', '#0c8599', '#0b7285'],\n  teal: ['#e6fcf5', '#c3fae8', '#96f2d7', '#63e6be', '#38d9a9', '#20c997', '#12b886', '#0ca678', '#099268', '#087f5b'],\n  green: ['#ebfbee', '#d3f9d8', '#b2f2bb', '#8ce99a', '#69db7c', '#51cf66', '#40c057', '#37b24d', '#2f9e44', '#2b8a3e'],\n  lime: ['#f4fce3', '#e9fac8', '#d8f5a2', '#c0eb75', '#a9e34b', '#94d82d', '#82c91e', '#74b816', '#66a80f', '#5c940d'],\n  yellow: ['#fff9db', '#fff3bf', '#ffec99', '#ffe066', '#ffd43b', '#fcc419', '#fab005', '#f59f00', '#f08c00', '#e67700'],\n  orange: ['#fff4e6', '#ffe8cc', '#ffd8a8', '#ffc078', '#ffa94d', '#ff922b', '#fd7e14', '#f76707', '#e8590c', '#d9480f'],\n}; // prettier-ignore\n\nconst colors = {\n  darken,\n  lighten,\n  darken1: darken(0.1),\n  darken2: darken(0.15),\n  darken3: darken(0.2),\n  ...openColors,\n};\n\nexport const fonts = {\n  body: `Karla,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif`,\n  header: `'IBM Plex Sans',-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif`,\n  code: 'Menlo,Monaco,Consolas,Courier New,monospace',\n};\n\nexport const theme = {\n  textStyles: {\n    caps: {\n      textTransform: 'uppercase',\n      letterSpacing: '0.035em',\n    },\n    contentHeader: {\n      textTransform: 'none',\n      letterSpacing: '0.035em',\n    }\n  },\n  \n  fontSizes: [\n    12, 16, 19, 23, 27, 32, 48, 64, 96, 128\n  ],\n  space: [\n    // margin and padding\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  colors,\n  fonts\n} // prettier-ignore\n","import { createGlobalStyle } from 'styled-components';\nimport { theme } from './style';\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body,\n  #___gatsby {\n    background-color: #fff;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    color: #000;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-family: ${theme.fonts.body};\n    line-height: 1.7;\n    font-size: ${theme.fontSizes[2]}px;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  #___gatsby > div {\n    height: 100%;\n  }\n  img.full-width-image {\n    width: 100%;\n  }\n  a {\n    color: #495057;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport {\n  Box,\n  Text,\n  Link,\n  Header,\n  InlineList,\n  InlineListItem,\n} from '../components/core';\n\nconst Footer = () => {\n  return (\n    <Box px={3} py={5} mx=\"auto\">\n      <Text textAlign={'center'}>\n        <InlineList>\n          <InlineListItem>\n            <Link to=\"mailto:peter.beshai@gmail.com\">\n              peter.beshai@gmail.com\n            </Link>\n          </InlineListItem>\n          <InlineListItem>\n            <Link to=\"https://twitter.com/pbesh\">Twitter</Link>\n          </InlineListItem>\n          <InlineListItem>\n            <Link to=\"https://www.linkedin.com/in/pbeshai\">LinkedIn</Link>\n          </InlineListItem>\n          <InlineListItem>\n            <Link to=\"https://github.com/pbeshai\">GitHub</Link>\n          </InlineListItem>\n          <InlineListItem>\n            <Link to=\"https://instagram.com/pbeshasketch\">Instagram</Link>\n          </InlineListItem>\n        </InlineList>\n      </Text>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { ThemeProvider } from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\nimport GlobalStyle from '../utils/GlobalStyle';\nimport { theme } from '../utils/style';\nimport Nav from './Nav';\nimport Footer from './Footer';\n\nimport '../utils/prism-theme.css';\n\nconst defaultDescription =\n  'Peter Beshai makes usable tools and visualizations with code.';\nconst keywords =\n  'data vis, visualization, creative coding, generative art, nba, basketball';\n\nconst baseUrl =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:8000'\n    : 'https://peterbeshai.com';\n\nconst Layout = ({\n  children,\n  hideNavTitle,\n  hideNav,\n  pageTitle,\n  description = defaultDescription,\n  metaImage,\n  slug = '',\n}) => (\n  <React.Fragment>\n    <GlobalStyle />\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => {\n        const baseTitle = data.site.siteMetadata.title;\n        const fullTitle = pageTitle ? `${pageTitle} - ${baseTitle}` : baseTitle;\n\n        return (\n          <>\n            <Helmet title={fullTitle}>\n              <link\n                href=\"https://fonts.googleapis.com/css?family=IBM+Plex+Sans:700|Karla:400,400i,700\"\n                rel=\"stylesheet\"\n              />\n              <html lang=\"en\" />\n              <meta name=\"description\" content={description} />\n              <meta name=\"twitter:description\" content={description} />\n              <meta property=\"og:description\" content={description} />\n              <meta name=\"keywords\" content={keywords} />\n              <meta name=\"twitter:site\" content=\"@pbesh\" />\n              <meta name=\"twitter:creator\" content=\"@pbesh\" />\n              <meta\n                property=\"og:title\"\n                content={pageTitle ? pageTitle : baseTitle}\n              />\n              <meta\n                property=\"twitter:title\"\n                content={pageTitle ? pageTitle : baseTitle}\n              />\n              <meta property=\"og:url\" content={`${baseUrl}${slug}`} />\n              {metaImage && (\n                <meta property=\"og:image\" content={`${baseUrl}${metaImage}`} />\n              )}\n              {metaImage && (\n                <meta name=\"twitter:image\" content={`${baseUrl}${metaImage}`} />\n              )}\n            </Helmet>\n            <ThemeProvider theme={theme}>\n              <div>\n                {!hideNav && <Nav showTitle={!hideNavTitle} />}\n                {children}\n                <Footer />\n              </div>\n            </ThemeProvider>\n          </>\n        );\n      }}\n    />\n  </React.Fragment>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}